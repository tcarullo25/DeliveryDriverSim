Week of 10/9
1. DONE: do threshold instead of quadrant
2. DONE: add non productive time which is idle time + time from driver loc to order pickup
3. DONE: pickup time - the timestep the restaurant will have it ready PREDETERMINED
          dropoff time - delivery by time PREDETERMINED (maybe measured by reputation of restaurant?)
4. DONE: more flexible rate based on duration (meet a certain wage)
5. DONE: reputation score for drivers based off meeting the pickup time & dropoff time (this should break ties into which driver gets the current order)
   DONE:       add reliability correlating with reputation score (random seed)
   NOTE: because most people are late very often, everyone's reputation will be low
   
Week of 10/23
1. #TODO: send out order to top n drivers, figure out which driver will take it, if multiple, then take the best one
  driver policies: accept all (greedy), some driver calculation
2. #TODO: company policies
3. #TODO: (display test cases) draw graph of nodes to see where pickups and dropoffs are 

OTHER NOTES:
#TODO: make tests look nicer and post the parameters of each test in the console output
#TODO: adding order while have a current order
#TODO: work on finding a good balance/equilibrium between # drivers and order spawn rate
# if we start to access a driver's currloc to order duration and totaltime a lot thru getOrderDuration, store these values

# not currently reflecting driver distance as they proceed in route

# give drivers policies & name driver's by their trait to better understand data

# might need to increase drivers for SelectiveBroadPolicy sinc

# is there a standard python made just for imports?
